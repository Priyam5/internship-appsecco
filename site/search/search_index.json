{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Project Title: Cloud Native implementation of DevSecOps Concepts Author: Priyam Singh Mentor: Akash Mahajan , Sunesh Govindaraj , Ayush Priya The report documents the tasks I am working and practicing as a part of my internship at Appsecco on Cloud Native implementation of DevSecOps concepts for an application as well as the issues I am facing while working, and how I resolved them.","title":"Introduction"},{"location":"#introduction","text":"Project Title: Cloud Native implementation of DevSecOps Concepts Author: Priyam Singh Mentor: Akash Mahajan , Sunesh Govindaraj , Ayush Priya The report documents the tasks I am working and practicing as a part of my internship at Appsecco on Cloud Native implementation of DevSecOps concepts for an application as well as the issues I am facing while working, and how I resolved them.","title":"Introduction"},{"location":"code-quality-analysis/","text":"","title":"Code Quality Analysis"},{"location":"contents/","text":"Table of contents The following is the report/documentation for the Problem Statement stated in next section. The contents of the report are: Introduction Contents Problem Statement SAST through GitHub Action Code Quality Analysis","title":"Contents"},{"location":"contents/#table-of-contents","text":"The following is the report/documentation for the Problem Statement stated in next section. The contents of the report are: Introduction Contents Problem Statement SAST through GitHub Action Code Quality Analysis","title":"Table of contents"},{"location":"github-action/","text":"SAST through Github Action Objective This section aims to perform SAST for angular-realworld-example-app and generate a report to provide a solution to the 1st point of the problem statement under Task 1. Github Action GitHub Actions make it easy to automate all software workflows. Github Actions let us build, test, and deploy our code right from GitHub. We can also assign code reviews, manage branches, and triage issues the way we want with actions. GitHub Actions are designed to help in building robust and dynamic automation's. Whether we want to build a container, deploy a web service, or automate welcoming a new user to our open-source project \u2014 there\u2019s an automated action for that. Creating Workflow I followed this official link for creating the first workflow . On GitHub, I forked angular-realworld-example-app and I created a new file in the .github/workflows . I made the following YAML contents into the sast-scan.yml file. For knowing the syntax of Github action I followed this official link. name: \"sast-scan\" on: push: branches: [master] jobs: test: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: install dependencies run: | sudo apt install npm sudo npm install --package-lock npm audit fix first - name: OWASP Dependency Check run: | wget https://github.com/jeremylong/DependencyCheck/releases/download/v6.0.2/dependency-check-6.0.2-release.zip unzip dependency-check-6.0.2-release.zip - name: Run scan with ODC run: | dependency-check/bin/dependency-check.sh --project \"angular-realworld-example-app\" --scan . To run workflow, I scrolled to the bottom of the page and select Commit directly to the main branch. Then, to create a pull request, click Propose new file . Committing the workflow file in repository triggers the push event and runs workflow. Viewing workflow results Under repository name, click Actions . In the left sidebar, click the workflow to see. From the list of workflow runs, click the name of the run to see. In the left sidebar, click the Lint code base job. Expand the Run sast-scan step to view the results.","title":"SAST Github Action"},{"location":"github-action/#sast-through-github-action","text":"","title":"SAST through Github Action"},{"location":"github-action/#objective","text":"This section aims to perform SAST for angular-realworld-example-app and generate a report to provide a solution to the 1st point of the problem statement under Task 1.","title":"Objective"},{"location":"github-action/#github-action","text":"GitHub Actions make it easy to automate all software workflows. Github Actions let us build, test, and deploy our code right from GitHub. We can also assign code reviews, manage branches, and triage issues the way we want with actions. GitHub Actions are designed to help in building robust and dynamic automation's. Whether we want to build a container, deploy a web service, or automate welcoming a new user to our open-source project \u2014 there\u2019s an automated action for that.","title":"Github Action"},{"location":"github-action/#creating-workflow","text":"I followed this official link for creating the first workflow . On GitHub, I forked angular-realworld-example-app and I created a new file in the .github/workflows . I made the following YAML contents into the sast-scan.yml file. For knowing the syntax of Github action I followed this official link. name: \"sast-scan\" on: push: branches: [master] jobs: test: runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 - name: install dependencies run: | sudo apt install npm sudo npm install --package-lock npm audit fix first - name: OWASP Dependency Check run: | wget https://github.com/jeremylong/DependencyCheck/releases/download/v6.0.2/dependency-check-6.0.2-release.zip unzip dependency-check-6.0.2-release.zip - name: Run scan with ODC run: | dependency-check/bin/dependency-check.sh --project \"angular-realworld-example-app\" --scan . To run workflow, I scrolled to the bottom of the page and select Commit directly to the main branch. Then, to create a pull request, click Propose new file . Committing the workflow file in repository triggers the push event and runs workflow.","title":"Creating Workflow"},{"location":"github-action/#viewing-workflow-results","text":"Under repository name, click Actions . In the left sidebar, click the workflow to see. From the list of workflow runs, click the name of the run to see. In the left sidebar, click the Lint code base job. Expand the Run sast-scan step to view the results.","title":"Viewing workflow results"},{"location":"problem-statement/","text":"Problem Statement Task 1 Performing SAST on the application through GitHub Actions and generate the report. Performing source Code Quality Analysis for linting errors to improve code quality and generate quality report.","title":"Problem Statement"},{"location":"problem-statement/#problem-statement","text":"","title":"Problem Statement"},{"location":"problem-statement/#task-1","text":"Performing SAST on the application through GitHub Actions and generate the report. Performing source Code Quality Analysis for linting errors to improve code quality and generate quality report.","title":"Task 1"}]}